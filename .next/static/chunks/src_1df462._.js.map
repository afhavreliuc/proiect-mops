{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/andrei/Downloads/proiect-mops-shazam%202/proiect-mops/src/components/common/Input.tsx"],"sourcesContent":["interface TextInputProps {\n  type: \"email\" | \"text\" | \"password\";\n  style?: string;\n  placeholder?: string;\n  name: string;\n  required?: boolean;\n}\n\nconst TextInput: React.FC<TextInputProps> = ({\n  type,\n  style,\n  placeholder,\n  required,\n  name,\n}) => {\n  return (\n    <input\n      type={type}\n      placeholder={placeholder || \"\"}\n      name={name}\n      required={required || false}\n      className={`${\n        style || \"\"\n      } appearance-none placeholder-black p-2.5 h-12 text-black text-2xl border-2 border-transparent focus:outline focus:outline-2 focus:outline-black`}\n    />\n  );\n};\n\nexport default TextInput;\n"],"names":[],"mappings":";;;;;AAQA,MAAM,YAAsC,CAAC,EAC3C,IAAI,EACJ,KAAK,EACL,WAAW,EACX,QAAQ,EACR,IAAI,EACL;IACC,qBACE,6LAAC;QACC,MAAM;QACN,aAAa,eAAe;QAC5B,MAAM;QACN,UAAU,YAAY;QACtB,WAAW,GACT,SAAS,GACV,+IAA+I,CAAC;;;;;;AAGvJ;KAlBM;uCAoBS"}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file:///Users/andrei/Downloads/proiect-mops-shazam%202/proiect-mops/src/components/common/Notification.tsx"],"sourcesContent":["import React from 'react';\n\ninterface NotificationProps {\n  message: string;\n  type: 'success' | 'error';\n  onClose: () => void;\n}\n\nconst Notification: React.FC<NotificationProps> = ({ message, type, onClose }) => {\n  const bgColor = type === 'success' ? 'bg-green-500' : 'bg-red-500';\n\n  React.useEffect(() => {\n    const timer = setTimeout(() => {\n      onClose();\n    }, 3000);\n\n    return () => clearTimeout(timer);\n  }, [onClose]);\n\n  return (\n    <div className={`fixed top-4 right-4 ${bgColor} text-white px-6 py-3 rounded shadow-lg flex items-center gap-2 z-50`}>\n      <span>{message}</span>\n      <button onClick={onClose} className=\"ml-2 hover:text-gray-200\">Ã—</button>\n    </div>\n  );\n};\n\nexport default Notification;"],"names":[],"mappings":";;;;AAAA;;;;AAQA,MAAM,eAA4C,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE;;IAC3E,MAAM,UAAU,SAAS,YAAY,iBAAiB;IAEtD,6JAAA,CAAA,UAAK,CAAC,SAAS;kCAAC;YACd,MAAM,QAAQ;gDAAW;oBACvB;gBACF;+CAAG;YAEH;0CAAO,IAAM,aAAa;;QAC5B;iCAAG;QAAC;KAAQ;IAEZ,qBACE,6LAAC;QAAI,WAAW,CAAC,oBAAoB,EAAE,QAAQ,oEAAoE,CAAC;;0BAClH,6LAAC;0BAAM;;;;;;0BACP,6LAAC;gBAAO,SAAS;gBAAS,WAAU;0BAA2B;;;;;;;;;;;;AAGrE;GAjBM;KAAA;uCAmBS"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///Users/andrei/Downloads/proiect-mops-shazam%202/proiect-mops/src/components/common/LoadingSpinner.tsx"],"sourcesContent":["import React from 'react';\n\nconst LoadingSpinner: React.FC = () => {\n  return (\n    <div className=\"flex justify-center items-center\">\n      <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-white\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;"],"names":[],"mappings":";;;;;AAEA,MAAM,iBAA2B;IAC/B,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;;;;;;;;;;AAGrB;KANM;uCAQS"}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":["file:///Users/andrei/Downloads/proiect-mops-shazam%202/proiect-mops/src/app/login/page.tsx"],"sourcesContent":["\"use client\";\n\nimport TextInput from \"@/components/common/Input\";\nimport { login, signInWithGoogle } from \"@/lib/features/AuthSlice\";\nimport { AppDispatch, RootState } from \"@/lib/store\";\nimport Image from \"next/image\";\nimport { FormEvent, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { faGoogle } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useRouter } from \"next/navigation\";\nimport Notification from '../../components/common/Notification';\nimport React, {useState} from \"react\";\nimport LoadingSpinner from '../../components/common/LoadingSpinner'\n\n\nconst LoginPage = () => {\n  const { currentUser, loading } = useSelector((state: RootState) => state.auth);\n  const dispatch = useDispatch<AppDispatch>();\n  const router = useRouter();\n  const [notification, setNotification] = useState<{\n    message: string;\n    type: 'success' | 'error';\n  } | null>(null);\n\n  const handleLogin = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const formData = new FormData(e.currentTarget);\n    const email = formData.get(\"email\") as string;\n    const password = formData.get(\"password\") as string;\n\n    const result = await dispatch(login({ email, password }));\n    if (result.type === 'auth/login/rejected') {\n      setNotification({ message: result.payload as string, type: 'error' });\n    }\n  };\n\n  const handleGoogleLogin = async () => {\n    await dispatch(signInWithGoogle());\n  };\n\n  useEffect(() => {\n    if (currentUser) {\n      router.push(\"/\");\n    }\n  }, [currentUser, router]);\n\n  return (\n    <div className=\"flex-1 w-full flex justify-center items-center\">\n      {notification && (\n        <Notification\n          message={notification.message}\n          type={notification.type}\n          onClose={() => setNotification(null)}\n        />\n      )}\n      <form\n        onSubmit={handleLogin}\n        className=\"relative bg-schwarzwald-green p-10 bg-opacity-80 text-white font-extralight justify-normal flex flex-col gap-8\"\n      >\n        <div className=\"text-6xl\">Welcome to Vaultone</div>\n        <div className=\"w-full flex justify-center\">\n          <div className=\"font-thin text-4xl\">Log In to continue.</div>\n        </div>\n\n        <TextInput\n          name=\"email\"\n          required\n          style=\"w-full\"\n          type={\"email\"}\n          placeholder=\"Email address\"\n        />\n        <TextInput\n          required\n          name=\"password\"\n          style=\"w-full\"\n          type={\"password\"}\n          placeholder=\"Password\"\n        />\n        <div>\n          <button className=\"underline font-normal text-xl\">\n            Forgot Password?\n          </button>\n        </div>\n\n        <button \n          type=\"submit\" \n          disabled={loading}\n          className={`font-normal text-xl bg-black h-12 flex justify-center items-center ${\n            loading ? 'opacity-70 cursor-not-allowed' : ''\n          }`}\n        >\n          {loading ? <LoadingSpinner /> : 'Continue'}\n        </button>\n\n        <div className=\"text-xl font-normal\">\n          Don't have an account?{\" \"}\n          <span className=\"underline\">\n            <a href=\"/signup\">Sign Up</a>\n          </span>\n        </div>\n\n        <div className=\"inline-flex items-center justify-center w-full\">\n          <hr className=\"w-full h-px bg-white bg-opacity-80 border-0\" />\n          <span className=\"px-4 text-lg\">OR</span>\n          <hr className=\"w-full h-px bg-white bg-opacity-80 border-0\" />\n        </div>\n\n        <button\n          onClick={handleGoogleLogin}\n          disabled={loading}\n          className={`px-2 font-normal text-xl border h-12 flex justify-between items-center ${\n            loading ? 'opacity-70 cursor-not-allowed' : ''\n          }`}\n        >\n          {loading ? (\n            <LoadingSpinner />\n          ) : (\n            <>\n              <FontAwesomeIcon icon={faGoogle} className=\"h-6 w-6\" />\n              <span>Continue With Google</span>\n              <span></span>\n            </>\n          )}\n        </button>\n\n        <Image\n          className=\"absolute z-[-10] left-[280px]\"\n          src=\"/bg-disk.png\"\n          alt=\"Background Image\"\n          width={700}\n          height={700}\n          priority\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 424, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}